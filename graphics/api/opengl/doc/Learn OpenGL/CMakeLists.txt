cmake_minimum_required(VERSION 3.10)
project(LearnOpenGL)

if(MSVC)
    SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /ENTRY:mainCRTStartup")
    set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT main)
endif()

find_package(OpenGL REQUIRED)
include_directories(${OPENGL_INCLUDE_DIRS})
add_subdirectory(external/glfw)
add_subdirectory(external/glad)
add_executable(main11 WIN32 1/main1.cpp)
target_link_libraries(main11 ${OPENGL_LIBRARIES} glfw glad)
add_executable(main12 WIN32 1/main2.cpp)
target_link_libraries(main12 ${OPENGL_LIBRARIES} glfw glad)
add_executable(main21 WIN32 2/main1.cpp)
target_link_libraries(main21 ${OPENGL_LIBRARIES} glfw glad)
add_executable(main22 WIN32 2/main2.cpp)
target_link_libraries(main22 ${OPENGL_LIBRARIES} glfw glad)
add_executable(main31 WIN32 3/main1.cpp)
target_link_libraries(main31 ${OPENGL_LIBRARIES} glfw glad)
add_executable(main32 WIN32 3/main2.cpp)
target_link_libraries(main32 ${OPENGL_LIBRARIES} glfw glad)
add_executable(main33 WIN32 3/main3.cpp shader_s.hpp)
target_link_libraries(main33 ${OPENGL_LIBRARIES} glfw glad)